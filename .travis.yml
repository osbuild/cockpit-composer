sudo: required
dist: trusty
services:
  - docker
language: node_js
node_js:
  - '6'
cache:
  directories:
  - node_modules
before_install:
  - |
        git config --global user.email "travis@welder.web"
        git config --global user.name "Travis CI"
        git remote add welder https://github.com/weldr/welder-web.git
        git fetch welder
        git log -1 --pretty=format:%H welder/master
        git rebase welder/master

        npm install -g codecov
        npm install -g nyc@11.1.0

        if [ "$COMMAND" == "bdcs-test" ]; then
            sudo docker pull welder/web-e2e-tests:latest
            sudo docker pull welder/web-bdcs:latest
        fi
        if [ "$COMMAND" == "lorax-test" ]; then
            sudo docker pull welder/web-lorax:latest
            sudo docker pull welder/web-e2e-tests:latest
        fi
install:
  - |
        if [ "$COMMAND" != "bdcs-test" ]; then
            npm install
        fi

        if [ "$COMMAND" == "lorax-test" ]; then
            node run build --with-coverage
        fi
env:
  global:
  - secure: Q9X11ehcl4YE0ylxDGk8NgVeO7nIpqWiI9am2GA6JVXcxeYYcLf3NHGe1JiLwFQ/xSq4KJrY0IgpivkVrPwTOojpR/tRG5QNDR/IJzN/6PV0IAWkHjPDKZexCQmy4IoPFib/cWqxo46V/JZ+gzs/TJugkl5/QpTcGlCr+d7VkuA80Bj0nlQO5GevYVgYMCrN6u6cKNOWtNQ0gppxHrpsLo36MpHqHbNbv236GPGsV4K2qpiqvvO5ogD+LCv5xoKEZK0ext4FNrrZFq6XEYdy9uUaUbSFfoG+HXESXbIt0L7krQDT/PkKI0X4nM91eYl5mS63+HVue7vLiijS5h9+YCa8HblMIiAiyrR3lPPH0Hx4FVSrQfkvtoXMBs3nRt7keu2FG370a7WoaQ71Q2jHrI9cfYzRwa/Mok73eF/oeN32hPlPDD679hWOZYqbSksSTikCLIgwJpEgIfaHgEYXFmL2JFXk0HbgIciA+C9fE0rfaUbmARtWYq8c+b52aIxAHEV9zYy3JeARrYxk7s3jQgS/LZIw4rfso+bQIvEMUDWt8MnvKaecY1E7XjOpW1kuk8gVjZbHm6oHKl2IndZA9KNpXjT2ew8d3SB69l2lswUYu4mTdywNEUt6nIaQtROiiftUKYThAbibIEIrq7GxQSOYMUPbvUYsZO5rkVssJps=
  - secure: K5mPGLWUFqX/Q0aNoUgYOONB9WKkd98FyMRX5UQQS2Q/lT4/OZWPezQ1I81ufK53r4VLXspL/EILNFXPHb8MEh5CfiIutL/39c/fAFY7XR9EzsuR/DdyIhuWRG4YhqlMU+g2F3zXqcZGgkrLQlvRlCsUp23DBBKZA76EgARMyg4TwVoNbd8vNRwuuo6qIh9d7YT2WcXv/fkF+lH36rjViC2TPFOmgOTkkdumLw/xCxOWK3IBXIPP295pq+Uo/kk6rXUvKrB4Feg2mBd+knvHVVKeu4RDqn2gOz6StP6z085mtr4EhMG4DMT1rGG9KoYnOIaH+cPBCtII+z0Snl3BXCEINR4CpyrrIuJEI5GGWNohr52KaN4i/5eS7Fn6M6ilTB0ohzvSCBEjl5EcV764yHVZJ69hKEBg4Goch17jwXL8vdFB8fPEWBqmAo7PBwXpbfTZCGgHJrpUpbAeJj77IZ7CFx2nOZSe1tsqLP7eCj7P+w9l2AHUMDoPbPstukLMkNpUpEI7ybzZCIJwWTq8KzsnjhFOPA17CF61IFKfyUD600grs2Ye7SyiVDxHoRo0IOMKhFreanwUNc9oxuVUuM/bfCpL9sm9Lxg8/bo2tGrUTb7LfKZOyi93ijHvJRCpzyf4F7otNoYFxNBHj45/xlYVO+4weKncJ3qbjAEE5DE=
  - secure: KixSETk7puLVyxEfCfvDJHl0us1X0CR9Xzeh90sz73JlnFcduv9EaJv/r9bzfjz/dnEmsuaScHJQ8mF0gayQi4ood1oB5ywWkNDfCGhgRG2BmW9FliDU4ukQRDqJq9peNb1TOD3x1LPL4dyNO4Yq8h7pR36KVTeD4hqJfnvlvdNiJ9tk/n6LaR9AFDzkyDfAqsEDqqk/fShw7CociLTsEZ4OTtX9dP/egQm0OA8KYHGxTubKI1Qn6U/4jZn85TajVfEg9HawasjJnFGURbwmCujiB2tLaMCJ+6uflkhyeW5zBKY0zBbMiSZU9lP+enkro6M9JyckGjrBDTxQTn1l0u557wdAzn7kIsyXdwfkqabjh3bicCA9xFkREyIpzAt8yNyqXZrsKJLURz2PVwmwI9ZEpE4hNfRtt3qAK98LYrtvW1JnRbaAci79TLBEfzaLNvn7+ZWXBzsoFTDrbaU70ox3gKcTtast9JtYNcWNNyGXJY6xCRYo9qPJ6vDkQnplA026zioP8q+Kuq2l5WRs4HmtoXxbmJpGya1dVgH/8giG7VU7Xf9q/7bW7e6ytM/UlJhheqJFC9aHBfIe53PNo8fL5XgjCFcAAXQ29i0X+ye6258rD0b9vswkkxQbo69dyI9fR/GPcndL3/VNfeZNTFG9BYoI5pwFnb5JOJoUfwo=
  - secure: WVjvShEcy4+QKTHxRR1HSLxjQjINaVyAbPEHIrUSmviwbFkuL9tqo1jhVFz8pRbqVRwNStMS8nevjc2pVG1GA5RB5KtYrE7WjkhOr2Yc/oJEDLuAzFGg84ngFnKNLjlcjvaY3YoPs5rgzG5QkDFRHT9tXnGtKN6vPxYUtY3KoBR40Dkq8xhJMlbP6b03FEFKcbLSW2AnI9siSfcn7XkC9thMeOsyGSHie5O+RgofE2YZUsSKngnD0/x3B4ye+Jek8g4fjfjPmGd4NVGRTa2vnc2jI9SpvzxSkYm+QJatsXB8AJjoXrUzVOQnm3jm0eFeUc0Vx8mj42Z/3LgtpdWWeGjlXmz/fdYWwc/AxFL1x5ohWjcLCDcaJg432PSVtYmceXxlXdd9wKLHN2L5yQXGCCOs41tEHZ685dwamqUNtCzIQbWZZgdsRoyemv9tb5Z/eu/frBbXjN8Xt8noqeSdLkJ2JSOOB63zq298mgGa9fXGpCaKjGwoiiRzCcwyoKwcO+QyStvJuI2HlGQAwJ9LHiJ88tiovLxfr/TDxgFr/+PhlAF1gD+2gooiIvIwAEafG/6ghqBNUhiKJV4w1Zh7EVfgL8OcXbydU0dc/fllj6SRPg9ZcYHmfDVZoR8OOKBdP6VDQiJ5bX5UZaQgp7UkBSG2x7EdMLmUXPPipsySOVk=
  matrix:
    - COMMAND=eslint
    - COMMAND=stylelint
    - COMMAND=unit-test
    - COMMAND=lorax-test
    - COMMAND=bdcs-test
script:
  - make "$COMMAND"
after_success:
  - if [ "$COMMAND" == "unit-test" ]; then cat ./coverage/lcov.info | codecov; fi
  - |
        if [ "$COMMAND" == "lorax-test" ]; then
            nyc report
            nyc report --reporter=lcov && codecov
        fi
        if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
            docker login -u atodorov -p $DOCKER_PASSWORD
            if [ "$COMMAND" == "lorax-test" ]; then
                # tag the current builds with the build number
                # if nothing has been changed the push will detect that
                # and the new tag will appear on Docker Hub without anything being
                # actually uploaded
                sudo docker tag welder/web-lorax:latest welder/web-lorax:$TRAVIS_BUILD_NUMBER
                sudo docker tag welder/web-e2e-tests:latest welder/web-e2e-tests:$TRAVIS_BUILD_NUMBER
                docker push welder/web-lorax
                docker push welder/web-e2e-tests
            fi
            if [ "$COMMAND" == "bdcs-test" ]; then
                sudo docker tag welder/web-bdcs:latest welder/web-bdcs:$TRAVIS_BUILD_NUMBER
                docker push welder/web-bdcs
            fi
        fi
after_failure:
  - |
        if [ "$TRAVIS_TEST_RESULT" ]; then
            CASE_NUMBER=0
            for SCREENSHOT in `ls ./failed-image`
            do
                CASE_NUMBER=$(($CASE_NUMBER + 1))
                REFERRER_COMMIT="$TRAVIS_COMMIT"
                if [ -n "$TRAVIS_PULL_REQUEST_SHA" ]; then
                    REFERRER_COMMIT="$TRAVIS_PULL_REQUEST_SHA"
                fi
                curl -s -X POST \
                     -H "User-Agent: weldr team CI" \
                     -H "Authorization: token $GITHUB_API_TOKEN" \
                     -d '{"state": "failure", "target_url": "https://s3.amazonaws.com/weldr/web-fail-test-screenshot/'$TRAVIS_BUILD_NUMBER'/'$SCREENSHOT'", "description": "Failed on '$COMMAND'", "context": "Screenshot for failed case '$CASE_NUMBER' on '$COMMAND'"}' \
                     https://api.github.com/repos/$TRAVIS_REPO_SLUG/statuses/$REFERRER_COMMIT
            done
        fi
addons:
  artifacts:
    debug: true
    paths: "./failed-image"
    target_paths: web-fail-test-screenshot/$TRAVIS_BUILD_NUMBER
    bucket: weldr
    s3_region: us-east-1
notifications:
  email:
    on_failure: change
    on_success: never
